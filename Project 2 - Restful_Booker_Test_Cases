# ‚úÖ RESTful Booker API ‚Äì Test Cases

## üìã General Information

* **Base URL**: `https://restful-booker.herokuapp.com`
* **Content-Type**: `application/json`
* **Auth Token Required**: ‚úÖ Yes ‚Äì for PUT, PATCH, DELETE

---

## üîÅ 1. Health Check ‚Äì `/ping`

| TC ID   | Test Case Description            | Method      | Expected Result       |
| ------- | -------------------------------- | ----------- | --------------------- |
| TC\_001 | Verify API health check endpoint | GET `/ping` | 201 Created or 200 OK |

---

## üîê 2. Auth ‚Äì `/auth`

| TC ID   | Test Case Description                       | Method       | Payload                                              | Expected Result                      |
| ------- | ------------------------------------------- | ------------ | ---------------------------------------------------- | ------------------------------------ |
| TC\_002 | Generate token with valid credentials       | POST `/auth` | `{ "username": "admin", "password": "password123" }` | Status 200, returns token            |
| TC\_003 | Fail token generation with invalid password | POST `/auth` | `{ "username": "admin", "password": "wrongpass" }`   | 200 OK, empty token or error message |
| TC\_004 | Missing required fields                     | POST `/auth` | `{}`                                                 | 400 Bad Request                      |

---

## üì• 3. Create Booking ‚Äì `/booking`

| TC ID   | Test Case Description                     | Method          | Payload                 | Expected Result             |
| ------- | ----------------------------------------- | --------------- | ----------------------- | --------------------------- |
| TC\_005 | Create booking with valid data            | POST `/booking` | Valid JSON payload      | 200 OK, booking ID returned |
| TC\_006 | Missing required fields (e.g., firstname) | POST `/booking` | Missing field(s)        | 400 Bad Request             |
| TC\_007 | Invalid data type in totalprice           | POST `/booking` | `"totalprice": "abc"`   | 400 Bad Request             |
| TC\_008 | Empty optional field (`additionalneeds`)  | POST `/booking` | `"additionalneeds": ""` | 200 OK                      |

---

## üì§ 4. Get Booking(s) ‚Äì `/booking` and `/booking/:id`

| TC ID   | Test Case Description        | Method | Endpoint                                | Expected Result             |
| ------- | ---------------------------- | ------ | --------------------------------------- | --------------------------- |
| TC\_009 | Get all booking IDs          | GET    | `/booking`                              | 200 OK, list of booking IDs |
| TC\_010 | Get booking by valid ID      | GET    | `/booking/1`                            | 200 OK, booking details     |
| TC\_011 | Get booking by invalid ID    | GET    | `/booking/99999`                        | 404 Not Found               |
| TC\_012 | Get booking filtered by name | GET    | `/booking?firstname=Jim&lastname=Brown` | 200 OK, filtered list       |

---

## üõ†Ô∏è 5. Update Booking ‚Äì `/booking/:id` (PUT)

| TC ID   | Test Case Description           | Method | Auth      | Payload       | Expected Result      |
| ------- | ------------------------------- | ------ | --------- | ------------- | -------------------- |
| TC\_013 | Update booking with valid token | PUT    | ‚úÖ Yes     | Full object   | 200 OK               |
| TC\_014 | Update booking without token    | PUT    | ‚ùå No      | Valid payload | 403 Forbidden        |
| TC\_015 | Update with invalid token       | PUT    | ‚ùå Invalid | Valid payload | 403 Forbidden        |
| TC\_016 | Update non-existent booking ID  | PUT    | ‚úÖ Yes     | Valid payload | 404 Not Found or 405 |

---

## üß© 6. Partial Update ‚Äì `/booking/:id` (PATCH)

| TC ID   | Test Case Description        | Method | Auth  | Payload                    | Expected Result |
| ------- | ---------------------------- | ------ | ----- | -------------------------- | --------------- |
| TC\_017 | Patch booking firstname      | PATCH  | ‚úÖ Yes | `{ "firstname": "John" }`  | 200 OK          |
| TC\_018 | Patch with invalid data type | PATCH  | ‚úÖ Yes | `{ "totalprice": "free" }` | 400 Bad Request |
| TC\_019 | Patch without token          | PATCH  | ‚ùå No  | Valid/Invalid Payload      | 403 Forbidden   |

---

## üóëÔ∏è 7. Delete Booking ‚Äì `/booking/:id`

| TC ID   | Test Case Description           | Method | Auth  | Expected Result |
| ------- | ------------------------------- | ------ | ----- | --------------- |
| TC\_020 | Delete booking with valid token | DELETE | ‚úÖ Yes | 201 Created     |
| TC\_021 | Delete booking without token    | DELETE | ‚ùå No  | 403 Forbidden   |
| TC\_022 | Delete non-existent booking ID  | DELETE | ‚úÖ Yes | 405 or 404      |

---

## üîê 8. Security Test Cases

| TC ID   | Test Case Description                   | Method | Endpoint       | Expected Result     |
| ------- | --------------------------------------- | ------ | -------------- | ------------------- |
| TC\_023 | Access protected endpoint without token | PUT    | `/booking/:id` | 403 Forbidden       |
| TC\_024 | Access with malformed token             | DELETE | `/booking/:id` | 403 Forbidden       |
| TC\_025 | XSS injection in firstname              | POST   | `/booking`     | Script is sanitized |
| TC\_026 | SQL injection in any field              | POST   | `/booking`     | 400 Bad Request     |

---

## üìâ 9. Performance (Optional)

| TC ID   | Test Case Description                      | Tool                  | Expected Result         |
| ------- | ------------------------------------------ | --------------------- | ----------------------- |
| TC\_027 | Run 100 concurrent GET `/booking` requests | JMeter                | All respond < 2 seconds |
| TC\_028 | Create 50 bookings in 1 minute             | Script/Postman Runner | All succeed with 200 OK |

---

## üß™ 10. Additional Booking Validation Test Cases

| TC ID   | Test Case Description                                 | Method          | Payload                                        | Expected Result                    |
| ------- | ----------------------------------------------------- | --------------- | ---------------------------------------------- | ---------------------------------- |
| TC\_029 | Create booking with empty JSON                        | POST `/booking` | `{}`                                           | 400 Bad Request                    |
| TC\_030 | Create booking with special characters in `firstname` | POST `/booking` | `{ "firstname": "<script>alert(1)</script>" }` | 400 Bad Request or sanitized       |
| TC\_031 | Create booking with `checkin` date after `checkout`   | POST `/booking` | Invalid date logic                             | 400 Bad Request                    |
| TC\_032 | Create booking with past date                         | POST `/booking` | `checkin: "1990-01-01"`                        | 200 OK (depends on business logic) |
| TC\_033 | Create booking with invalid date format               | POST `/booking` | `checkin: "01-01-2024"`                        | 400 Bad Request                    |
| TC\_034 | Create booking with negative price                    | POST `/booking` | `totalprice: -500`                             | 400 Bad Request                    |

---

## üîç 11. Boundary Testing

| TC ID   | Test Case Description                           | Method          | Payload                | Expected Result                          |
| ------- | ----------------------------------------------- | --------------- | ---------------------- | ---------------------------------------- |
| TC\_035 | Create booking with very long `firstname`       | POST `/booking` | 1000+ characters       | 400 Bad Request or 413 Payload Too Large |
| TC\_036 | Create booking with `totalprice` as 0           | POST `/booking` | `totalprice: 0`        | 200 OK or 400 depending on logic         |
| TC\_037 | Create booking with extremely high `totalprice` | POST `/booking` | `totalprice: 99999999` | 200 OK                                   |

---

## ‚öôÔ∏è 12. Header and Content-Type Validation

| TC ID   | Test Case Description                 | Method          | Headers              | Expected Result            |
| ------- | ------------------------------------- | --------------- | -------------------- | -------------------------- |
| TC\_038 | Request without Content-Type header   | POST `/booking` | No `Content-Type`    | 415 Unsupported Media Type |
| TC\_039 | Request with wrong Content-Type       | POST `/booking` | `text/plain`         | 415 Unsupported Media Type |
| TC\_040 | Request with `application/xml` header | POST `/booking` | Not supported format | 415 Error                  |

---

## üåê 13. Internationalization (i18n)

| TC ID   | Test Case Description                  | Method          | Payload              | Expected Result              |
| ------- | -------------------------------------- | --------------- | -------------------- | ---------------------------- |
| TC\_041 | Create booking with Chinese characters | POST `/booking` | `"firstname": "Âº†‰ºü"`  | 200 OK                       |
| TC\_042 | Create booking with Arabic characters  | POST `/booking` | `"lastname": "ÿ£ÿ≠ŸÖÿØ"` | 200 OK                       |
| TC\_043 | Create booking with emojis in fields   | POST `/booking` | `"firstname": "üòä"`  | 400 Bad Request or sanitized |

---

## üîÑ 14. Idempotency & Repeatability

| TC ID   | Test Case Description        | Method                | Payload      | Expected Result           |
| ------- | ---------------------------- | --------------------- | ------------ | ------------------------- |
| TC\_044 | Send same booking data twice | POST `/booking`       | Same payload | Two different booking IDs |
| TC\_045 | Delete same booking twice    | DELETE `/booking/:id` | -            | First: 201, Second: 404   |

---

## üîÅ 15. Token Expiry / Invalid Token

| TC ID   | Test Case Description            | Method               | Auth          | Expected Result |
| ------- | -------------------------------- | -------------------- | ------------- | --------------- |
| TC\_046 | Use expired token                | PUT `/booking/:id`   | Expired       | 403 Forbidden   |
| TC\_047 | Use token with invalid structure | PATCH `/booking/:id` | "abc.def.ghi" | 403 Forbidden   |

---
